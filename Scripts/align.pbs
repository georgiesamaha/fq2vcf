#!/bin/bash

#PBS -P 
#PBS -N Align
#PBS -l select=1:ncpus=16:mem=80GB
#PBS -l walltime=80:00:00
#PBS -M 
#PBS -m e
#PBS -q defaultQ
#PBS -J 1-

# edit PBS variables for projectID, your email address, number of jobs to be run in parallel (number of samples in your config file).

# To run: qsub align.pbs
# To run one sample only, hash out #PBS -J, fill in number of sample in config below to be run and unhash
##PBS_ARRAY_INDEX=1

# edit these to match your project (specify full path)
Project=
config=
ref=

module load samtools/1.14
module load bwa/0.7.17
module load samblaster/0.1.24

group=$(awk -v taskID=$PBS_ARRAY_INDEX '$1==taskID {print $2}' $config)
sample=$(awk -v taskID=$PBS_ARRAY_INDEX '$1==taskID {print $3}' $config)
platform=$(awk -v taskID=$PBS_ARRAY_INDEX '$1==taskID {print $4}' $config)
seq_centre=$(awk -v taskID=$PBS_ARRAY_INDEX '$1==taskID {print $5}' $config)
fq1=$(awk -v taskID=$PBS_ARRAY_INDEX '$1==taskID {print $6}' $config)
fq2=$(awk -v taskID=$PBS_ARRAY_INDEX '$1==taskID {print $7}' $config)
flowcell=$(zcat $fq1 | head -1 | cut -d ':' -f 3)
lane=$(zcat $fq1 | head -1 | cut -d ':' -f 4)
bams=/scratch/${Project}/Bams/${group} # where do you want your bams stored
fastq=/scratch/${Project}/Fastq/${group}/${sample} # where are the fastqs stored
library=1
to_merge=''
cat_disc=''
cat_split=''

mkdir -p $bams

# unhash and use to test you're capturing the correct before running alignment
echo sample:$sample
echo group:$group
echo fq1:$fq1
echo fq2:$fq2
echo flowcell:$flowcell
echo lane:$lane
echo library:$library
echo NCPUS:$NCPUS

# Align and pull out discordant and split reads
bwa mem -M -t $NCPUS $ref \
        -R "@RG\tID:${flowcell}.${lane}_${sample}_${library}\tPL:${platform}\tPU:${flowcell}.${lane}\tSM:${sample}\tLB:${breed}_${sample}_${library}\tCN:${seq_centre}" \
        $fq1 $fq2  \
        | samblaster -M -e --addMateTags \
        -d ${bams}/${sample}.disc.sam \
        -s ${bams}/${sample}.split.sam \
        | samtools view -bSho ${bams}/${sample}.dedup.bam

# sort bams by coordinates
samtools view -@ 12 -h ${bams}/${sample}.dedup.bam \
        | samtools sort -@ ${NCPUS} -T ${bams}/temp -m 4G -o ${bams}/${sample}.dedup.sorted.bam

# Error check with samtools
if ! samtools quickcheck ${bams}/${sample}.dedup.sorted.bam
        then
        printf "corrupted or missing ${bams}/${sample}.dedup.sorted.bam"
fi

# Index with samtools
samtools index -b ${bams}/${sample}.dedup.sorted.bam ${bams}/${sample}.dedup.sorted.bai
